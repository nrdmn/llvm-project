//===-- STM8ISelDAGToDAG.cpp - A dag to dag inst selector for STM8 --------===//
//
// Part of the LLVM Project, under the Apache License v2.0 with LLVM Exceptions.
// See https://llvm.org/LICENSE.txt for license information.
// SPDX-License-Identifier: Apache-2.0 WITH LLVM-exception
//
//===----------------------------------------------------------------------===//
//
// This file defines an instruction selector for the STM8 target.
//
//===----------------------------------------------------------------------===//

#include "STM8.h"
#include "STM8TargetMachine.h"
#include "llvm/CodeGen/SelectionDAGISel.h"

using namespace llvm;

class STM8DAGToDAGISel : public SelectionDAGISel {
public:
  static char ID;

  STM8DAGToDAGISel() = delete;

  STM8DAGToDAGISel(STM8TargetMachine &TM, CodeGenOptLevel OptLevel)
      : SelectionDAGISel(ID, TM, OptLevel) {}

  void Select(SDNode *N) override;

  // Include the pieces autogenerated from the target description.
#include "STM8GenDAGISel.inc"
};

char STM8DAGToDAGISel::ID = 0;

void STM8DAGToDAGISel::Select(SDNode *N) {
  SelectCode(N);
}

FunctionPass *llvm::createSTM8ISelDag(STM8TargetMachine &TM,
                                      CodeGenOptLevel OptLevel) {
    return new STM8DAGToDAGISel(TM, OptLevel);
}
